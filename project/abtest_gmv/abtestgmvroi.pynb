{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "233eae4c-59c6-4b0a-b58d-f1467f2356f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üîç Group Summary:\n",
      "\n",
      "     group    avg_gmv      total_gmv  total_discount  user_count  roi\n",
      "0  control  49.892213  250109.664156        0.000000        5013  NaN\n",
      "1     test  58.034983  289420.458440    28942.045844        4987  9.0\n",
      "\n",
      "üìà Test Results:\n",
      "\n",
      "GMV Uplift: 16.32%\n",
      "t-Statistic: 38.16\n",
      "p-Value: 2.8631e-297\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "from io import BytesIO\n",
    "from scipy.stats import ttest_ind\n",
    "\n",
    "# Step 1: Download Excel from GitHub\n",
    "url = \"https://www.dropbox.com/scl/fi/khi17myq2m3rosz5eawx7/abtestgmvroi.xlsx?rlkey=ts1ujc7whmrezf8dkmq67zhne&st=aijoy80p&dl=1\"\n",
    "response = requests.get(url)\n",
    "df = pd.read_excel(BytesIO(response.content))\n",
    "\n",
    "# Step 2: Summary statistics\n",
    "summary = df.groupby(\"group\").agg(\n",
    "    avg_gmv=(\"gmv\", \"mean\"),\n",
    "    total_gmv=(\"gmv\", \"sum\"),\n",
    "    total_discount=(\"discount_given\", \"sum\"),\n",
    "    user_count=(\"user_id\", \"count\")\n",
    ").reset_index()\n",
    "\n",
    "# Step 3: ROI\n",
    "summary[\"roi\"] = (summary[\"total_gmv\"] - summary[\"total_discount\"]) / summary[\"total_discount\"]\n",
    "summary.loc[summary[\"group\"] == \"control\", \"roi\"] = None\n",
    "\n",
    "# Step 4: T-test\n",
    "control_gmv = df[df[\"group\"] == \"control\"][\"gmv\"]\n",
    "test_gmv = df[df[\"group\"] == \"test\"][\"gmv\"]\n",
    "t_stat, p_val = ttest_ind(test_gmv, control_gmv, equal_var=False)\n",
    "\n",
    "# Step 5: GMV uplift percentage\n",
    "control_avg = summary.loc[summary[\"group\"] == \"control\", \"avg_gmv\"].values[0]\n",
    "test_avg = summary.loc[summary[\"group\"] == \"test\", \"avg_gmv\"].values[0]\n",
    "uplift_pct = ((test_avg - control_avg) / control_avg) * 100\n",
    "\n",
    "# Step 6: Attach test results\n",
    "# Display group summary\n",
    "print(\"üîç Group Summary:\\n\")\n",
    "print(summary[[\"group\", \"avg_gmv\", \"total_gmv\", \"total_discount\", \"user_count\", \"roi\"]])\n",
    "\n",
    "# Display test results separately\n",
    "print(\"\\nüìà Test Results:\\n\")\n",
    "print(f\"GMV Uplift: {uplift_pct:.2f}%\")\n",
    "print(f\"t-Statistic: {t_stat:.2f}\")\n",
    "print(f\"p-Value: {p_val:.4e}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5adac482-5209-46f9-8848-779b9f11b3ee",
   "metadata": {},
   "source": [
    "[Download Excel Dataset](https://www.dropbox.com/scl/fi/khi17myq2m3rosz5eawx7/abtestgmvroi.xlsx?rlkey=ikwv4htvaryfx9ehepqvdd7uw&st=a6381wai&dl=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee12d9d2-a271-41b1-bba1-7f9e3349b84e",
   "metadata": {},
   "source": [
    "üìÑ A/B Testing Report: Evaluating ROI and GMV Impact of a Discount Campaign\n",
    "\n",
    "üß† Objective\n",
    "To determine whether offering a 10% discount to a subset of users can increase Gross Merchandise Value (GMV) and generate a positive Return on Investment (ROI) without compromising overall profitability.\n",
    "\n",
    "üè¢ Business Context\n",
    "The e-commerce platform sought to boost sales through promotional offers. However, the marketing team required evidence that such discounts would drive meaningful revenue growth and not merely reduce margins.\n",
    "\n",
    "üß™ Experimental Design\n",
    "Users were randomly assigned to two groups:\n",
    "\n",
    "Control Group: No discount applied\n",
    "\n",
    "Test Group: Received a 10% discount\n",
    "\n",
    "To avoid visible unfairness or user dissatisfaction (e.g., \"Why did others get a discount but I didn‚Äôt?\"), the discount was deployed through private, targeted channels such as:\n",
    "\n",
    "Personalized coupon codes\n",
    "\n",
    "App-exclusive offers\n",
    "\n",
    "Email-based promotions\n",
    "\n",
    "This reflects how real-world segmentation works and ensures the user experience remains natural and unbiased.\n",
    "\n",
    "The campaign ran over a fixed period, during which transactional behavior was tracked. Key metrics such as GMV and discount amount were collected. A two-sample t-test was conducted to assess whether the difference in GMV between groups was statistically significant.\n",
    "\n",
    "üìà Key Metric Definitions\n",
    "\n",
    "GMV (Gross Merchandise Value): Total value of items purchased\n",
    "\n",
    "ROI (Return on Investment):\n",
    "\n",
    "$$\n",
    "ROI = \\frac{Total\\ GMV - Total\\ Discount}{Total\\ Discount}\n",
    "$$\n",
    "\n",
    "\n",
    "This indicates the return earned for every dollar of discount given.\n",
    "\n",
    "---\n",
    "\n",
    "\n",
    "üìä Results\n",
    "\n",
    "| Group   | Avg GMV | Total GMV | Discount  | ROI  | GMV Uplift | p-Value |\n",
    "|---------|---------|-----------|-----------|------|------------|---------|\n",
    "| Control | \\$49.89  | \\$250,109  | \\$0        | N/A  | ‚Äî          | ‚Äî       |\n",
    "| Test    | \\$58.03  | \\$289,420  | \\$28,942   | 9.0  | +16.3%     | < 0.001 |\n",
    " \n",
    "\n",
    " \n",
    "‚úÖ Conclusion\n",
    "The 10% discount campaign:\n",
    "\n",
    "Increased average GMV by 16.3%\n",
    "\n",
    "Delivered a high ROI of 9.0, meaning every $1 of discount generated $10 in GMV\n",
    "\n",
    "Yielded a statistically significant result (p < 0.001)\n",
    "\n",
    "Recommendation:\n",
    "This targeted discount strategy was both effective and profitable. The results support expanding the campaign or further testing with refined user segments for optimization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72fd7667-34cf-4331-8889-f42692c64067",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
